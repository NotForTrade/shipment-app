apiVersion: v1
kind: Namespace
metadata:
  name: shipment-app

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipment-app-deployment
  namespace: shipment-app
  labels:
    app: shipment-app
spec:
  #replicas: 3
  selector:
    matchLabels:
      app: shipment-app
  template:
    metadata:
      labels:
        app: shipment-app
    spec:
      containers:
      - name: shipment-app-container
        image: shipment-app:latest
        imagePullPolicy: Never  # kind can't find the local image without this parameter
        ports:
        - containerPort: 5000
        env:
        - name: REDIS_HOST
          value: redis-queue.redis.svc
        - name: REDIS_PORT
          value: "6379"

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: brontosaurus-pop
  namespace: shipment-app
  labels:
    app: brontosaurus-pop
spec:
  #replicas: 3
  selector:
    matchLabels:
      app: brontosaurus-pop
  template:
    metadata:
      labels:
        app: brontosaurus-pop
    spec:
      containers:
      - name: worker
        image: shipment-app:latest
        command: ["python"]
        args: ["brontosaurus_queue_worker.py"]
        imagePullPolicy: Never  # kind can't find the local image without this parameter
        ports:
        - containerPort: 5000
        env:
        - name: REDIS_HOST
          value: redis-queue.redis.svc
        - name: REDIS_PORT
          value: "6379"
        - name: PYTHONUNBUFFERED
          value: "1"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: raptor
  namespace: shipment-app
  labels:
    app: raptor
spec:
  #replicas: 3
  selector:
    matchLabels:
      app: raptor
  template:
    metadata:
      labels:
        app: raptor
    spec:
      containers:
      - name: worker
        image: shipment-app:latest
        command: ["python"]
        args: ["raptor.py"]
        imagePullPolicy: Never  # kind can't find the local image without this parameter
        ports:
        - containerPort: 5000
        env:
        - name: PYTHONUNBUFFERED
          value: "1"



---

kind: Service
apiVersion: v1
metadata:
  name: webapp
  namespace: shipment-app
spec:
  selector:
    app: shipment-app
  ports:
  # Default port used by the image
  - port: 5000

---


kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: shipment-app
spec:
  selector:
    app: shipment-app
  ports:
  # Default port used by the image
  - port: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shipment-app-ingress
  namespace: shipment-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /(.*)
        backend:
          service:
            name: webapp
            port:
              number: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shipment-api-ingress
  namespace: shipment-app
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /api(/|$)(.*)
        backend:
          service:
            name: api
            port:
              number: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: brontosaurus-connector-ingress
  namespace: shipment-app
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /connector/brontosaurus(/|$)(.*)
        backend:
          service:
            name: webapp
            port:
              number: 5000